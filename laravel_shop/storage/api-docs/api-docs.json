{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel shop",
        "description": "API of a simple shop website.",
        "version": "1.0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local Machine"
        },
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/v1/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get list of brands",
                "description": "Returns list of brands",
                "operationId": "getBrands",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Stores a new brand",
                "description": "Stores record in the database",
                "operationId": "insertBrand",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/brands/{id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Returns a single brand",
                "description": "Retreives record from database",
                "operationId": "getBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the brand which is asked for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Updates a single brand",
                "description": "Updates a record in database",
                "operationId": "12ce9e080b669657b98e405aa828e142",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete Existing Brand",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of categories",
                "operationId": "getCategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Stores a new category",
                "description": "Stores record in the database",
                "operationId": "insertCategory",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Returns a single category",
                "description": "Retreives record from database",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the category which is asked for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Updates a single category",
                "description": "Updates a record in database",
                "operationId": "967daab8505178dee4bebbf667484546",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete Existing Category",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get list of comments",
                "description": "Returns list of comments",
                "operationId": "getComments",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Stores a new comment",
                "description": "Stores record in the database",
                "operationId": "insertComment",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/comments/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Returns a single comment",
                "description": "Retreives record from database",
                "operationId": "getComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the comment which is asked for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Updates a single comment",
                "description": "Updates a record in database",
                "operationId": "b2eb5bc7787842af2c1f168c967da67c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete Existing Comment",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Stores a new Product",
                "description": "Stores record in the database",
                "operationId": "insertProduct",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns a single product",
                "description": "Retreives record from database",
                "operationId": "getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the product which is asked for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Updates a single product",
                "description": "Updates a record in database",
                "operationId": "711d2714dc6bab3f0a5d4838fc0654ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete Existing Product",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/providers": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Get list of providers",
                "description": "Returns list of providers",
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            },
            "post": {
                "tags": [
                    "Providers"
                ],
                "summary": "Stores a new provider",
                "description": "Stores record in the database",
                "operationId": "insertProvider",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Provider"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/providers/{id}": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "Returns a single provider",
                "description": "Retreives record from database",
                "operationId": "getProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the provider which is asked for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Providers"
                ],
                "summary": "Updates a single provider",
                "description": "Updates a record in database",
                "operationId": "6051418814eb018b3385a5dcb4fa5e67",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Provider"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Providers"
                ],
                "summary": "Delete Existing Provider",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Provider's id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Creates a new API key for the user",
                "description": "It will generate a new token for their login.",
                "operationId": "Login",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResult"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Stores a new user",
                "description": "Stores record in the database",
                "operationId": "Register",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Register"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/changePassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Change users password",
                "description": "Stores password in the database",
                "operationId": "ChangePassword",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePassword"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Content"
                    }
                }
            }
        },
        "/api/v1/person/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns a single User",
                "description": "Retreives record from database",
                "operationId": "getPerson",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the user which is asked for",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/person/{phone}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user information",
                "description": "Updates a record in database",
                "operationId": "93d129a3294c29a82bc1eabffba7260c",
                "parameters": [
                    {
                        "name": "phone",
                        "in": "path",
                        "description": "User's phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "title": "Brand",
                "description": "Brand Model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the brand",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the brand",
                        "type": "string",
                        "format": "string",
                        "example": "Asus"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "slug of the brand",
                        "type": "string",
                        "example": "asus-laptops-23t45tge5674ewedfk"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Brand"
                }
            },
            "Category": {
                "title": "Category",
                "description": "Category Model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the category",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the category",
                        "type": "string",
                        "format": "string",
                        "example": "Laptops"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "slug of the category",
                        "type": "string",
                        "example": "laptops-27ewfjkl4h8fk"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "ChangePassword": {
                "title": "Change Password",
                "description": "Change Password Model",
                "properties": {
                    "phone": {
                        "title": "phone",
                        "description": "Phone number of user",
                        "type": "string",
                        "format": "string",
                        "example": "+989388063351"
                    },
                    "current_password": {
                        "title": "Current Password",
                        "description": "Secret Passkey",
                        "type": "string",
                        "format": "string",
                        "example": "3Xample123!@#"
                    },
                    "new_password": {
                        "title": "New Password",
                        "description": "Secret Passkey",
                        "type": "string",
                        "format": "string",
                        "example": "eXamplel456"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChangePassword"
                }
            },
            "Comment": {
                "title": "Comment",
                "description": "Comment Model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the comment",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the comment",
                        "type": "string",
                        "format": "string",
                        "example": "Ziba bood"
                    },
                    "content": {
                        "title": "Content",
                        "description": "content of the comment",
                        "type": "string",
                        "example": "Ipsum quis aute amet dolore laboris \n     *      Lorem nulla Lorem consequat labore aliqua \n     *      excepteur cupidatat."
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Comment"
                }
            },
            "Login": {
                "title": "Login",
                "description": "Login Model",
                "properties": {
                    "phone_number": {
                        "title": "Phone number",
                        "description": "Login of the user",
                        "type": "string",
                        "format": "string",
                        "example": "1234567890"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Secret passphrase of the user",
                        "type": "string",
                        "format": "string",
                        "example": "***"
                    },
                    "generate_new_api_token": {
                        "title": "Generate new API key",
                        "description": "To allow API to generate a new session",
                        "type": "boolean",
                        "format": "boolean",
                        "example": false
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Login"
                }
            },
            "LoginResult": {
                "title": "LoginResult",
                "description": "LoginResult Model",
                "properties": {
                    "username": {
                        "title": "Username",
                        "description": "Login of the user",
                        "type": "string",
                        "format": "string",
                        "example": "guest"
                    },
                    "api_key": {
                        "title": "API Key",
                        "description": "Bearer Token Generated for Authorization",
                        "type": "string",
                        "format": "string",
                        "example": "qwertyuioplkjhgfdsazxcvbnm123456"
                    },
                    "success": {
                        "title": "Success",
                        "description": "Was login successful",
                        "type": "boolean",
                        "format": "boolean",
                        "example": false
                    },
                    "user_id": {
                        "title": "ID",
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LoginResult"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product Model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id of the product",
                        "type": "integer",
                        "format": "integer",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "products name",
                        "type": "string",
                        "format": "string",
                        "example": "asus laptop"
                    },
                    "brand_id": {
                        "title": "Brand_id",
                        "description": "ID of the brand",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price of the product",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    },
                    "description": {
                        "title": "description",
                        "description": "products description",
                        "type": "string",
                        "example": "Veniam excepteur ex excepteur aliquip aute sunt minim et."
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "slug of the product",
                        "type": "string",
                        "example": "asuse-laptop-274h8fk"
                    },
                    "stock": {
                        "title": "NationalCode Verified",
                        "description": "Is this product stocked?",
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "Provider": {
                "title": "Provider",
                "description": "Provider Model",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id of the provider",
                        "type": "integer",
                        "format": "integer",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "providers name",
                        "type": "string",
                        "format": "string",
                        "example": "asus laptop"
                    },
                    "slug": {
                        "title": "Slug",
                        "description": "slug of the provider",
                        "type": "string",
                        "example": "asuse-laptop-274h8fk"
                    },
                    "address": {
                        "title": "address",
                        "description": "providers address",
                        "type": "string",
                        "example": "Veniam excepteur ex excepteur aliquip aute sunt minim et."
                    },
                    "phone": {
                        "title": "NationalCode Verified",
                        "description": "providers phone number",
                        "type": "string",
                        "example": "+9813468053"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Provider"
                }
            },
            "Register": {
                "title": "Register",
                "description": "Register Model",
                "properties": {
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "string",
                        "example": "styse011@gmail.com"
                    },
                    "phone_number": {
                        "title": "Phone number",
                        "description": "Phone number of the user",
                        "type": "string",
                        "format": "string",
                        "example": "+9812345678"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Fullname of the user",
                        "type": "string",
                        "format": "string",
                        "example": "John Doe"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Secret Passkey",
                        "type": "string",
                        "format": "string",
                        "example": "3Xample123!@#"
                    },
                    "api_token": {
                        "title": "API Token",
                        "description": "Secret random key",
                        "type": "string",
                        "format": "string",
                        "example": "aabbcc112233"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Register"
                }
            },
            "User": {
                "title": "User",
                "description": "User Model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "integer",
                        "example": 1
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone number of user",
                        "type": "string",
                        "format": "string",
                        "example": "+989388063351"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Fullname of the user",
                        "type": "string",
                        "format": "string",
                        "example": "Jane Doe"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Secret Passkey",
                        "type": "string",
                        "format": "string",
                        "example": "3Xample123!@#"
                    },
                    "api_token": {
                        "title": "API Token",
                        "description": "Secret random key",
                        "type": "string",
                        "format": "string",
                        "example": "aabbcc112233"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer {jwt})",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "v1"
        },
        {
            "name": "Providers",
            "description": "v1"
        },
        {
            "name": "Products",
            "description": "v1"
        },
        {
            "name": "Categories",
            "description": "v1"
        },
        {
            "name": "Brands",
            "description": "v1"
        },
        {
            "name": "Comments",
            "description": "v1"
        }
    ],
    "security": [
        {
            "bearer_token": []
        }
    ]
}